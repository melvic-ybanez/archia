package com.melvic.archia.ast.leaf

import com.melvic.archia.ast.*

class MatchQuery : WithField<MatchField>() {
    override fun getField(name: String) = MatchField(name)
}

class MatchField(
    name: String,
    var query: MatchQueryValue? = null,
    var analyzer: Analyzer? = null,
    var autoGeneratedSynonymsPhraseQuery: Boolean? = null,
    var fuzziness: Fuzziness? = null,
    var maxExpansions: Int? = null,
    var prefixLength: Int? = null,
    var transpositions: Boolean? = null,
    var fuzzyRewrite: Rewrite? = null,
    var lenient: Boolean? = null,
    var operator: Operator? = null,
    var minimumShouldMatch: MinimumShouldMatch? = null,
    var zeroTermsQuery: ZeroTermsQuery? = null
): Field(name), WithText, WithNum, WithBool, WithDate

interface MatchQueryValue

data class MatchAllQuery(var boost: Boost? = null) : Clause
class MatchNoneQuery : Clause

enum class Operator { OR, AND }
enum class ZeroTermsQuery { NONE, ALL }